<!DOCTYPE html>
<html lang="en">

<head>
	<link rel="shortcut icon" href="">
	<meta content="text/html;charset=utf-8" http-equiv="Content-Type">
	<meta content="utf-8" http-equiv="encoding">
	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\" />
	<title>CADDeck Configurator</title>
	<style>
		body {
			text-align: center;
			font-family: verdana;
			color: #000088;
			width: 99%;
		}

		.pageloading {
			background-color: #ffffff;
			color: #1fa3ec;
			line-height: 2.4rem;
			font-size: 1.2rem;
			width: 100%;
			position: absolute;
			top: 32%;
		}

		a {
			color: #000088;
		}

		a:hover {
			color: #1fa3ec;
		}

		.form button {
			border: 0;
			border-radius: 0.3rem;
			background-color: #1fa3ec;
			color: #fff;
			line-height: 2.4rem;
			font-size: 1.2rem;
			width: 100%;
		}

		.tab {
			overflow: hidden;
			border: 1px solid #ccc;
			background-color: #8cd7ff;
			width: 100%;
		}

		.tab button {
			background-color: inherit;
			float: left;
			border: none;
			outline: none;
			cursor: pointer;
			padding: 14px 16px;
			transition: 0.3s;
			font-family: verdana;
			color: #000000;
		}

		.tab button:hover {
			background-color: #1fa3ec;
		}

		.tab button.active {
			background-color: #1fa3ec;
		}

		.tabcontent {
			display: none;
			padding: 6px 12px;
			border: 1px solid #1fa3ec;
			border-top: none;
		}

		.ball-loader {
			width: 80px;
			height: 16.6666666667px;
			position: absolute;
			top: 40%;
			left: 50%;
			-webkit-transform: translateX(-50%) translateY(-50%);
			transform: translateX(-50%) translateY(-50%);
		}

		.ball-loader-ball {
			will-change: transform;
			height: 16.6666666667px;
			width: 16.6666666667px;
			border-radius: 50%;
			background-color: #1fa3ec;
			position: absolute;
			-webkit-animation: grow .7s ease-in-out infinite alternate;
			animation: grow .7s ease-in-out infinite alternate;
		}

		.ball-loader-ball.ball1 {
			left: 0;
			-webkit-transform-origin: 100% 50%;
			transform-origin: 100% 50%;
		}

		.ball-loader-ball.ball2 {
			left: 50%;
			-webkit-transform: translateX(-50%) scale(1);
			transform: translateX(-50%) scale(1);
			-webkit-animation-delay: 0.33s;
			animation-delay: 0.33s;
		}

		.ball-loader-ball.ball3 {
			right: 0;
			-webkit-animation-delay: 0.66s;
			animation-delay: 0.66s;
		}

		@-webkit-keyframes grow {
			to {
				-webkit-transform: translateX(-50%) scale(0);
				transform: translateX(-50%) scale(0);
			}
		}

		@keyframes grow {
			to {
				-webkit-transform: translateX(-50%) scale(0);
				transform: translateX(-50%) scale(0);
			}
		}
	</style>
	<script src="jquery-3.5.1.slim.min.js"></script>
</head>

<body>
	<div id="contentloading" class="pageloading">
		Loading Configurator
	</div>

	<div id="ball-loader" class="ball-loader">
		<div class="ball-loader-ball ball1"></div>
		<div class="ball-loader-ball ball2"></div>
		<div class="ball-loader-ball ball3"></div>
	</div>

	<div id="maincontent" style="display: none;">
		<h1>CADDeck Configurator</h1>
		<form class="form" method="post" action='/upload' id="uploadfile" enctype="multipart/form-data"></form>
		<form class="form" method="post" action='/uploadJSON' id="uploadjsonfile" enctype="multipart/form-data"></form>
		<form class="form" method="get" action='/downloadJSON' id="downloadjsonfile"></form>

		<!-- Menu -->
		<div class="tab">
			<button class="tablinks" onclick="openMenu(event, 'wifi')">WiFi</button>
			<button class="tablinks" onclick="openMenu(event, 'general')">Settings</button>
			<button class="tablinks" onclick="openMenu(event, 'uploadimage')">Upload logo</button>

			<form method='post' action='/restart'>
				<button style="float: right;"
					onclick="return confirm('Are you sure? Unsaved configuration will be lost!')" class="tablinks">
					Restart </button>
			</form>

			<button style="float: right;" class="tablinks" onclick="openMenu(event, 'info')">Info</button>

			<button style="float: right;" class="tablinks" onclick="openMenu(event, 'removefiles')">Remove Files</button>

			<button style="float: right;" class="tablinks" onclick="openMenu(event, 'uploadjson')">Upload JSON
				File</button>

			<button style="float: right;" class="tablinks" onclick="openMenu(event, 'downloadjson')">Download Menu
				Config</button>
		</div>

		<!-- Tab Intro -->
		<div id="intro" class="tabcontent">
			<h3>Welcome</h3>
			<p>
				Welcome to the configurator! Select an option/page from the top menu.
			</p>
		</div>

		<!-- Tab WiFi -->
		<div id="wifi" class="tabcontent">
			<div style="float: right; font-size: 11px"><a href="/download?file=wificonfig.json">download
					wificonfig.json</a></div><br>
			<h3>WiFi Settings</h3>
			<p>
			<form method='post' id="savewifi" action='/saveconfig'>

				<div style="font-family: Arial, Helvetica, Sans-Serif; Color: #000088;">

					<label for="ssid">WiFi SSID:</label><br>
					<input type="text" id="ssid" name="ssid"><br><br>

					<label for="password">WiFi Password:</label><br>
					<input type="password" id="password" name="password" autocomplete="new-password"><br>
					<input type="checkbox" onclick="togglepassword()">Show Password <br><br>

					&nbsp;&nbsp;Wifi Mode:&nbsp;
					<select class="wifimode" id='wifimode' name='wifimode'>
						<option value="WIFI_STA">Station</option>
						<option value="WIFI_AP">Access Point</option>
					</select><br>

					<label for="wifihostname">Wifi Hostname:</label>
					<input type="text" id="wifihostname" name="wifihostname"><br>

					&nbsp;&nbsp;Connection attempts:&nbsp;
					<select class="attempts" id='attempts' name='attempts'>
						<option value="5">5</option>
						<option value="10">10</option>
						<option value="15">15</option>
						<option value="20">20</option>
					</select><br>

					&nbsp;&nbsp;Delay between attempts:&nbsp;
					<select class="attemptdelay" id='attemptdelay' name='attemptdelay'>
						<option value="100">100 ms</option>
						<option value="500">500 ms</option>
						<option value="1000">1000 ms</option>
						<option value="2000">2000 ms</option>
					</select><br>
				</div>

				<div class="form" style="width: 50%; text-align: : center; margin: auto;">
					<input type="hidden" id='save_wifi' name='save' value="wifi">
					<br /><button style='cursor: pointer;' form="savewifi" type='submit'>Save WiFi Config</button>
				</div>
			</form>

		</div>
		</p>
	</div>
	<!-- Tab General -->
	<div id="general" class="tabcontent">
		<div style="float: right; font-size: 11px"><a href="/download?file=general.json">download general.json</a>
		</div>
		<br>
		<h3>General Settings</h3>
		<p>
		<div style="font-family: Arial, Helvetica, Sans-Serif; Color: #000088;">
			<h2>Colors</h2>
		</div>

		<form method='post' id="generalconfig" action='/saveconfig'>
			<div style="font-family: Arial, Helvetica, Sans-Serif; Color: #000088;">
				&nbsp;&nbsp;Menu Button Colour:&nbsp;
				<input style='width: 100px; height: 30px; padding:1px; border-radius:0.3rem;' id='menubuttoncolor'
					name='menubuttoncolor' type="color" value='#000000'>
				&nbsp;&nbsp;Function Button Colour:&nbsp;
				<input style='width: 100px; height: 30px; padding:1px; border-radius:0.3rem;' id='functionbuttoncolor'
					name='functionbuttoncolor' type="color" value='#000000'>
				&nbsp;&nbsp;Latch Colour:&nbsp;
				<input style='width: 100px; height: 30px; padding:1px; border-radius:0.3rem;' id='latchcolor'
					name='latchcolor' type="color" value='#000000'>
				&nbsp;&nbsp;Background Colour:&nbsp;
				<input style='width: 100px; height: 30px; padding:1px; border-radius:0.3rem;' id='background'
					name='background' type="color" value='#000000'>
			</div><br>

			<div style="font-family: Arial, Helvetica, Sans-Serif; Color: #000088;">
				<h2>Deep Sleep</h2>
			</div>

			&nbsp;&nbsp;Deep Sleep:&nbsp;
			<select class="sleepenable" id='sleepenable' name='sleepenable'>
				<option value="true">Enabled</option>
				<option value="false">Disabled</option>
			</select>
			&nbsp;&nbsp;Deep Sleep Timer:&nbsp;
			<select class="sleeptimer" id='sleeptimer' name='sleeptimer'>
				<option value="10">10 Minutes</option>
				<option value="20">20 Minutes</option>
				<option value="30">30 Minutes</option>
				<option value="60">60 Minutes</option>
			</select>
			&nbsp;&nbsp;USB Comms:&nbsp;
			<select class="usbcommsenable" id='usbcommsenable' name='usbcommsenable'>
				<option value="true">Enabled</option>
				<option value="false">Disabled</option>
			</select>
			<div style="font-family: Arial, Helvetica, Sans-Serif; Color: #000088;">
				<h2>Sound</h2>
			</div>

			&nbsp;&nbsp;Beep on Touch:&nbsp;
			<select class="sleepenable" id='beep' name='beep'>
				<option value="true">Enabled</option>
				<option value="false">Disabled</option>
			</select>

			<div style="font-family: Arial, Helvetica, Sans-Serif; Color: #000088;">
				<h2>CADDeck Helpers</h2>
			</div>

			&nbsp;&nbsp;Modifier 1:&nbsp;
			<select class="modifier1" id='modifier1' name='modifier1'>
				<option value="0">None</option>
				<option value="128">CTRL</option>
				<option value="129">SHIFT</option>
				<option value="130">ALT</option>
				<option value="131">GUI</option>
			</select>

			&nbsp;&nbsp;Modifier 2:&nbsp;
			<select class="modifier2" id='modifier2' name='modifier2'>
				<option value="0">None</option>
				<option value="128">CTRL</option>
				<option value="129">SHIFT</option>
				<option value="130">ALT</option>
				<option value="131">GUI</option>
			</select>

			&nbsp;&nbsp;Modifier 3:&nbsp;
			<select class="modifier3" id='modifier3' name='modifier3'>
				<option value="0">None</option>
				<option value="128">CTRL</option>
				<option value="129">SHIFT</option>
				<option value="130">ALT</option>
				<option value="131">GUI</option>
			</select>

			<br>

			&nbsp;&nbsp;Delay after helper (ms):&nbsp;
			<select class="helperdelay" id='helperdelay' name='helperdelay'>
				<option value="0">0</option>
				<option value="100">100</option>
				<option value="200">200</option>
				<option value="500">500</option>
				<option value="1000">1000</option>
			</select>


			&nbsp;&nbsp;Menu on startup:&nbsp;
			<select class="startup_menu" id='startup_menu' name='startup_menu'>
				<option value="0">0</option>
				<option value="1">1</option>
				<option value="2">2</option>
				<option value="3">3</option>
				<option value="4">4</option>
				<option value="5">5</option>
				<option value="6">6</option>
				<option value="7">7</option>
				<option value="8">8</option>
				<option value="9">9</option>
			</select>

			<br>

			&nbsp;&nbsp;Controllable GPIO Pin:&nbsp;
			<select class="gpio_pin" id='gpio_pin' name='gpio_pin'>
				<option value="255">None</option>
				<option value="4">4</option>
				<option value="5">5</option>
				<option value="25">25</option>
				<option value="26">26</option>
			</select>


			<div class="form" style="width: 50%; text-align: : center; margin: auto;">
				<input type="hidden" id='save_general' name='save' value="general">
				<br /><button style='cursor: pointer;' form="generalconfig" type='submit'>Save General Config</button>
			</div>
		</form>
	</div>
	</p>

	<!-- Upload Logo -->
	<div id="uploadimage" class="tabcontent">
		<h3>Upload a new logo</h3>
		<div style="width: 70%; text-align: left; margin: auto;"> You can customize the logos that are used. If you
			upload a file with a name that already exists, the file is <u>overwritten</u>. You can only upload .bmp
			images. There images should be in a 24-bit RGB format and should be no more then 75x75 pixels. Smaller
			images are supported.<br /><br />

			Images that are used for Elgato's Stream Deck are also supported. These should also be in a 24-bit RGB
			format. You can convert these using free online tools like <a
				href="https://online-converting.com/image/convert2bmp/"
				target="_blank">https://online-converting.com/image/convert2bmp/</a>.<br /><br />

			CADDeck will check the colour of the first pixel in the image. If that pixel is black (#000000),
			all
			black pixels will be rendered as transparent and the button colour chosen in the "General" tab will be
			used.
			If that pixel has a colour, the button will have that colour so that the image blends in nicely.
		</div>
		<p>
		<div class="form" style="width: 10%; text-align: : center; margin: auto;">
			<input form="uploadfile" type="file" name="name" accept=".bmp"><br /><br />
			<button style='cursor: pointer;' form="uploadfile" type="save">Upload</button>
		</div>
		</p>
	</div>

	<!-- Remove files -->
	<div id="removefiles" class="tabcontent">
		<h3>Remove files</h3>

		<div class="form" id=deletefilelist style="width: 20%; text-align: left; margin: auto;">

		</div>

	</div>

	<!-- Upload JSON -->
	<div id="uploadjson" class="tabcontent">
		<h3>Upload a JSON Config File</h3>
		<div style="width: 70%; text-align: left; margin: auto;"> You can upload a previously downloaded JSON file
			to save you some time from having to configure a whole menu. The filename should be the menu name (all
			lower-case), e.g. menu.json for Menu, menu2.json for Menu 2, etc. It is also a good idea to validate
			your .json file if you made any manual modifications. You can do that using
			<a href="https://jsonlint.com/" target="_blank">JSONLint</a>
			<br /><br />
		</div>
		<p>
		<div class="form" style="width: 10%; text-align: center; margin: auto;">
			<input form="uploadjsonfile" type="file" name="name" accept=".json"><br /><br />
			<button style='cursor: pointer;' form="uploadjsonfile" type="save">Upload JSON</button>
		</div>
		</p>
	</div>

	<!-- Download JSON -->
	<div id="downloadjson" class="tabcontent">
		<h3>Download a Menu Config File</h3>
		<div style="width: 70%; text-align: center; margin: auto;"> Select a file from the list and download it to
			the client computer. <br /><br /></div>
		<p>
		<div class="form" style="width: 20%; text-align: center; margin: auto;">
			<label for="framework">Select Menu</label>
			<select name="menunumberlist_download" id="menunumberlist_download" form="downloadjsonfile">
				<option value="0">Home Menu</option>
				<option value="1">Menu 1</option>
				<option value="2">Menu 2</option>
				<option value="3">Menu 3</option>
				<option value="4">Menu 4</option>
				<option value="5">Menu 5</option>
				<option value="6">Menu 6</option>
				<option value="7">Menu 7</option>
				<option value="8">Menu 8</option>
				<option value="9">Menu 9</option>
			</select>
			<br /><br />
			<!-- <input form="downloadjsonfile" type=hidden name="name" ><br /><br /> -->
			<button style='cursor: pointer;' form="downloadjsonfile" type="save">Download</button>
		</div>
		</p>
	</div>
	<!-- INFO -->
	<div id="info" class="tabcontent">
		<h3>About CADDeck</h3>
		<div id="infocontent" style="width: 40%; text-align: left; margin: auto;">

		</div>
		<p>
	</div>

	<!-- ---------------------- javscript includes ---------------------- -->


	<script>
		function togglepassword() {
			var field = document.getElementById("password");
			if (field.type === "password") {
				field.type = "text";
			} else {
				field.type = "password";
			}
		}
	</script>
	<script>

		function initialView(evt) {
			// Declare all variables
			var i, tabcontent, tablinks;

			// Get all elements with class="tabcontent" and hide them
			tabcontent = document.getElementsByClassName("tabcontent");
			for (i = 0; i < tabcontent.length; i++) {
				tabcontent[i].style.display = "none";
			}

			// Get all elements with class="tablinks" and remove the class "active"
			tablinks = document.getElementsByClassName("tablinks");
			for (i = 0; i < tablinks.length; i++) {
				tablinks[i].className = tablinks[i].className.replace(" active", "");
			}

			// Show the into text
			document.getElementById("intro").style.display = "block";

		}
		document.addEventListener('DOMContentLoaded', initialView(event), false);

	</script>
	<script>
		function openMenu(evt, menuitem) {
			// Declare all variables
			var i, tabcontent, tablinks;

			// Get all elements with class="tabcontent" and hide them
			tabcontent = document.getElementsByClassName("tabcontent");
			for (i = 0; i < tabcontent.length; i++) {
				tabcontent[i].style.display = "none";
			}

			// Get all elements with class="tablinks" and remove the class "active"
			tablinks = document.getElementsByClassName("tablinks");
			for (i = 0; i < tablinks.length; i++) {
				tablinks[i].className = tablinks[i].className.replace(" active", "");
			}

			// Show the current tab, and add an "active" class to the button that opened the tab
			console.log("openMenu():", menuitem);

			document.getElementById(menuitem).style.display = "block";
			evt.currentTarget.className += " active";
		}

	</script>

	<script>
		function createCheck(filename) {
			return `<input form="delete" type="checkbox" id="${filename}" name="${filename}" value="${filename}"><label for="${filename}"> ${filename}</label><br>`;
		}

		function fillvaluelist(targetNode, srcArray) {

			targetNode.innerHTML = srcArray.reduce((options, { value, name }) =>
				options += `<option value="${value}">${name}</option>`,
				'');

		}

		function getlogoconfig() {

			var logolist = []; // Array holding the logos (empty to start)

			// Loading all the logo's
			fetch('/list?dir=/logos')
				.then((response3) => {
					return response3.json()
				})
				.then((data3) => {
					var checkboxlist = '<form method="post" id="delete" action="/editor">';
					data3.forEach(obj => {
						Object.entries(obj).forEach(([key, value]) => {

							var input = createCheck(value); // Creates the html for the checkbox
							checkboxlist += input;

						});

					});
					checkboxlist += '<br><button style="cursor: pointer;"" type="save">Delete files</button></form>';
					document.getElementById("deletefilelist").innerHTML = checkboxlist;

				})
				.catch((err) => {
					console.log(err)
				})
		}

		// Function to get Sleep settings:
		function getwificonfig() {

			// Load Menu 5
			fetch('config/wificonfig.json')
				.then((response) => {
					return response.json()
				})
				.then((data) => {


					document.getElementById("ssid").value = data.ssid;
					document.getElementById("password").value = data.password;
					document.getElementById("wifimode").value = data.wifimode;
					document.getElementById("wifihostname").value = data.wifihostname;
					document.getElementById("attempts").value = data.attempts;
					document.getElementById("attemptdelay").value = data.attemptdelay;

				})
				.catch((err) => {
					console.log(err)
				})
		}

		// Load Colors and then other configs
		fetch('config/general.json')
			.then((response) => {
				return response.json()
			})
			.then((data) => {

				document.getElementById("menubuttoncolor").value = data.menubuttoncolor;
				document.getElementById("functionbuttoncolor").value = data.functionbuttoncolor;
				document.getElementById("latchcolor").value = data.latchcolor;
				document.getElementById("background").value = data.background;
				document.getElementById("sleepenable").value = data.sleepenable;
				document.getElementById("usbcommsenable").value = data.usbcommsenable;
				document.getElementById("sleeptimer").value = data.sleeptimer;
				document.getElementById("beep").value = data.beep;
				document.getElementById("modifier1").value = data.modifier1;
				document.getElementById("modifier2").value = data.modifier2;
				document.getElementById("modifier3").value = data.modifier3;
				document.getElementById("helperdelay").value = data.helperdelay;
				document.getElementById("startup_menu").value = data.startup_menu;
				document.getElementById("gpio_pin").value = data.gpio_pin;
			}).then(() => {
				getwificonfig();
			})
			.then(() => {
				getlogoconfig();
			})
			.then(() => {
				document.getElementById("contentloading").style.display = "none";
				document.getElementById('ball-loader').style.display = "none";
				document.getElementById("maincontent").style.display = "block";
			})
			.catch((err) => {
				console.log(err)
			})
	</script>


</body>

</html>